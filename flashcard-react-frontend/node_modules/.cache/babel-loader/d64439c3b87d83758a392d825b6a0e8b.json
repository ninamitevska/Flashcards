{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './app.css';\nimport axios from 'axios';\nexport default function Flashcard(_ref) {\n  let {\n    flashcard\n  } = _ref;\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [color, setColor] = useState(false);\n  let cardClass = color ? \"front text-success\" : \"front text-danger\";\n  let flipClass = `card ${flip ? 'flip' : ''}`;\n  const [wordClick, setWordClicked] = useState();\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 150));\n  }\n\n  useEffect(setMaxHeight, [flashcard.question]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []); // useEffect(() => {\n  //     (`/get_words`)\n  //         .then(response => response.json())\n  //         .then(wordClick=> setWordClicked(wordClick))\n  // },[word_clicked])\n\n  function get_words(question, correctWord) {\n    axios.get(`http://localhost:5000/get_words`, {\n      params: {\n        word_clicked: question,\n        correct_word: correctWord\n      }\n    }).then(res => setWordClicked(res.data));\n  }\n\n  const doSelect = word => {\n    console.log(word);\n  };\n\n  const options = wordClick === null || wordClick === void 0 ? void 0 : wordClick.map(it => /*#__PURE__*/React.createElement(\"div\", {\n    key: it[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onClick: () => doSelect(it[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), \" \", it[0]));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: flipClass,\n    style: {\n      height: height\n    },\n    onClick: () => {\n      setFlip(!flip);\n      get_words(flashcard.question);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"front\",\n    ref: frontEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, flashcard.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\",\n    ref: backEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, options)));\n}\n;","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js"],"names":["React","useEffect","useRef","useState","axios","Flashcard","flashcard","flip","setFlip","height","setHeight","color","setColor","cardClass","flipClass","wordClick","setWordClicked","frontEl","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","question","window","addEventListener","removeEventListener","get_words","correctWord","get","params","word_clicked","correct_word","then","res","data","doSelect","word","console","log","options","map","it"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport './app.css'\nimport axios from 'axios';\n\n\nexport default function Flashcard({flashcard}) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('initial')\n    const [color, setColor] = useState(false)\n    let cardClass = color ? \"front text-success\" : \"front text-danger\";\n    let flipClass = `card ${flip ? 'flip' : ''}`\n    const [wordClick, setWordClicked] = useState()\n\n    const frontEl = useRef()\n    const backEl = useRef()\n\n\n    function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n        setHeight(Math.max(frontHeight, backHeight, 150))\n    }\n\n    useEffect(setMaxHeight, [flashcard.question])\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n    // useEffect(() => {\n    //     (`/get_words`)\n    //         .then(response => response.json())\n    //         .then(wordClick=> setWordClicked(wordClick))\n    // },[word_clicked])\n\n\n    function get_words(question, correctWord) {\n        axios.get(`http://localhost:5000/get_words`, {\n            params: {\n                word_clicked: question,\n                correct_word: correctWord\n            }\n        }).then(res => setWordClicked(res.data))\n    }\n\n    const doSelect = (word) => {\n        console.log(word)\n    }\n    const options = wordClick?.map(it =>\n        (<div key={it[0]}>\n            <input type=\"radio\" onClick={() => doSelect(it[0])}/> {it[0]}\n\n        </div>)\n    )\n\n    return (\n        <>\n            <div className={flipClass}\n                 style={{height: height}}\n                 onClick={() => {\n                     setFlip(!flip);\n                     get_words(flashcard.question)\n                 }}>\n                <div className=\"front\" ref={frontEl}>\n                    {flashcard.question}\n                </div>\n\n                <div className=\"back\" ref={backEl}>\n                    {options}\n                </div>\n            </div>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}