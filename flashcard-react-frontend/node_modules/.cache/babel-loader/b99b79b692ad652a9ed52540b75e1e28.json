{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './app.css';\nimport Button from 'react-bootstrap/Button';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nexport default function Flashcard(_ref) {\n  let {\n    flashcard\n  } = _ref;\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [color, setColor] = useState(false); //let cardClass = color ? \"front text-success\" : \"front text-danger\";\n\n  let flipClass = `card ${flip ? 'flip' : ''}`; //const {word_clicked} = useParams()\n\n  const [wordClick, setWordClicked] = useState();\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  const handleClick = c => {\n    setColor(c);\n  };\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 150));\n  }\n\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []); // useEffect(() => {\n  //     (`/get_words`)\n  //         .then(response => response.json())\n  //         .then(wordClick=> setWordClicked(wordClick))\n  // },[word_clicked])\n\n  function get_words(question, correctWord) {\n    axios.get(`http://localhost:5000/get_words`, {\n      params: {\n        word_clicked: question,\n        correct_word: correctWord\n      }\n    }).then(res => setWordClicked(res.data));\n  }\n\n  const doSelect = word => {\n    console.log(word);\n  };\n\n  const options = wordClick === null || wordClick === void 0 ? void 0 : wordClick.map(it => /*#__PURE__*/React.createElement(\"div\", {\n    key: it[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onClick: () => doSelect(it[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), \" \", it[0]));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: flipClass,\n    style: {\n      height: height\n    },\n    onClick: () => {\n      setFlip(!flip);\n      get_words(flashcard.question);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cardClass,\n    ref: frontEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, flashcard.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\",\n    ref: backEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, options)));\n}\n;","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js"],"names":["React","useEffect","useRef","useState","Button","useParams","axios","Flashcard","flashcard","flip","setFlip","height","setHeight","color","setColor","flipClass","wordClick","setWordClicked","frontEl","backEl","handleClick","c","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","question","answer","window","addEventListener","removeEventListener","get_words","correctWord","get","params","word_clicked","correct_word","then","res","data","doSelect","word","console","log","options","map","it","cardClass"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport './app.css'\nimport Button from 'react-bootstrap/Button';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\n\n\nexport default function Flashcard({flashcard}) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('initial')\n    const [color, setColor] = useState(false)\n    //let cardClass = color ? \"front text-success\" : \"front text-danger\";\n    let flipClass = `card ${flip ? 'flip' : ''}`\n    //const {word_clicked} = useParams()\n    const [wordClick, setWordClicked] = useState()\n\n    const frontEl = useRef()\n    const backEl = useRef()\n\n    const handleClick = (c) => {\n        setColor(c);\n    }\n\n   function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n        setHeight(Math.max(frontHeight, backHeight, 150))\n    }\n\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer])\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n    // useEffect(() => {\n    //     (`/get_words`)\n    //         .then(response => response.json())\n    //         .then(wordClick=> setWordClicked(wordClick))\n    // },[word_clicked])\n\n    function get_words(question, correctWord) {\n        axios.get(`http://localhost:5000/get_words`, {\n            params: {\n                word_clicked: question,\n                correct_word: correctWord\n            }\n        }).then(res => setWordClicked(res.data))\n    }\n    const doSelect = (word) =>{\n        console.log(word)\n    }\n    const options = wordClick?.map(it =>\n        (<div key={it[0]}>\n            <input type=\"radio\" onClick={()=>doSelect(it[0])}/> {it[0]}\n\n        </div>)\n    )\n\n    return (\n        <>\n            <div className={flipClass}\n                 style={{height: height}}\n                 onClick={() => {\n                     setFlip(!flip);\n                     get_words(flashcard.question)\n                 }}>\n                <div className={cardClass} ref={frontEl}>\n                    {flashcard.question}\n                </div>\n\n                <div className=\"back\" ref={backEl}>\n                    {options}\n                </div>\n            </div>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}