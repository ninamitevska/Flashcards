{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\"; //import fcData from \"./FlashcardList\";\n//import FlashcardData from \"./data/flashcards.json\";\n//import LanguageData from \"./data/languages.json\"\n\n/*import Flashcard from \"./Flashcard\"\nimport {\n    BrowserRouter as Router,\n    Route,\n    Routes\n} from \"react-router-dom\";*/\n\nimport axios from \"axios\";\n\nconst App = props => {\n  // const [flashcards] = useState(fcData)\n  const [languages, setLanguages] = useState();\n  const [fromLanguage, setFromLanguage] = useState();\n  const [toLanguage, setToLanguage] = useState(); //const [fcData, setFlashcards] = useState([{}])\n\n  function get_languages(languages) {\n    axios.get(`http://localhost:5000/languages`, {\n      params: {\n        language_data: languages\n      }\n    }).then(res => setLanguages(res.data));\n  }\n\n  useEffect(() => {\n    if (!languages) {\n      get_languages();\n      console.log(languages);\n    }\n  });\n\n  function get_from_languages(fromLanguage) {\n    axios.get(`http://localhost:5000/flashcards`, {\n      params: {\n        language_selected: fromLanguage\n      }\n    }).then(res => setFromLanguage(res.data));\n  }\n\n  useEffect(() => {\n    if (!fromLanguage) {\n      get_from_languages();\n      console.log(fromLanguage);\n    }\n  });\n\n  function get_to_languages(toLanguage) {\n    axios.get(`http://localhost:5000/languages`, {\n      params: {\n        to_language_data: toLanguage\n      }\n    }).then(res => setToLanguage(res.data));\n  }\n\n  useEffect(() => {\n    if (!toLanguage) {\n      get_to_languages(); //console.log(toLanguage)\n    }\n  }); // da gi pratam kako props\n\n  const fromLanguageOptions = languages === null || languages === void 0 ? void 0 : languages.map(language => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: language.id,\n      key: language.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }, language.name);\n  });\n  const toLanguageOptions = languages === null || languages === void 0 ? void 0 : languages.map(language => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: language.id,\n      key: language.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    }, language.name);\n  });\n\n  const onFromLanguageChange = e => {\n    setFromLanguage(e.target.value);\n    console.log('from', languages[e.target.value - 1].name);\n    get_from_languages(languages[e.target.value - 1].name);\n  };\n\n  const onToLanguageChange = e => {\n    setToLanguage(e.target.value);\n    console.log('to', languages[e.target.value - 1].name);\n    get_from_languages(languages[e.target.value - 1].name);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Language that you know\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: onFromLanguageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, fromLanguageOptions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Language that you want to learn\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: onToLanguageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, toLanguageOptions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\"\n    /*onClick={props.fcData}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FlashcardList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App; // const cardShuffler = (arr) => {\n//     return arr.sort( () => .5 - Math.random() );\n// };\n// useEffect(() => {\n//     fetch(\"/flashcards\").then(\n//         FlashcardData => FlashcardData.json()\n//     ).then(\n//         fcData => {\n//             setFlashcards(fcData)\n//             console.log(fcData)\n//         }\n//     )\n// },[])","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/App.js"],"names":["React","useEffect","useState","FlashcardList","axios","App","props","languages","setLanguages","fromLanguage","setFromLanguage","toLanguage","setToLanguage","get_languages","get","params","language_data","then","res","data","console","log","get_from_languages","language_selected","get_to_languages","to_language_data","fromLanguageOptions","map","language","id","name","toLanguageOptions","onFromLanguageChange","e","target","value","onToLanguageChange"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport FlashcardList from \"./FlashcardList\";\n//import fcData from \"./FlashcardList\";\n//import FlashcardData from \"./data/flashcards.json\";\n//import LanguageData from \"./data/languages.json\"\n/*import Flashcard from \"./Flashcard\"\nimport {\n    BrowserRouter as Router,\n    Route,\n    Routes\n} from \"react-router-dom\";*/\nimport axios from \"axios\";\n\n\nconst App = (props) => {\n\n\n\n    // const [flashcards] = useState(fcData)\n    const [languages, setLanguages] = useState()\n    const [fromLanguage, setFromLanguage] = useState()\n    const [toLanguage, setToLanguage] = useState()\n    //const [fcData, setFlashcards] = useState([{}])\n\n    function get_languages(languages) {\n        axios.get(`http://localhost:5000/languages`, {\n            params: {\n                language_data: languages\n            }\n        }).then(res => setLanguages(res.data))\n    }\n\n    useEffect(() => {\n        if (!languages) {\n            get_languages()\n            console.log(languages)\n        }\n    })\n\n    function get_from_languages(fromLanguage) {\n        axios.get(`http://localhost:5000/flashcards`, {\n            params: {\n                language_selected: fromLanguage\n            }\n        }).then(res => setFromLanguage(res.data))\n    }\n\n    useEffect(() => {\n        if (!fromLanguage) {\n            get_from_languages()\n            console.log(fromLanguage)\n        }\n    })\n\n    function get_to_languages(toLanguage) {\n        axios.get(`http://localhost:5000/languages`, {\n            params: {\n                to_language_data: toLanguage\n            }\n        }).then(res => setToLanguage(res.data))\n    }\n\n    useEffect(() => {\n        if (!toLanguage) {\n            get_to_languages()\n            //console.log(toLanguage)\n        }\n    })\n\n    // da gi pratam kako props\n\n    const fromLanguageOptions = languages?.map(language => {\n        return <option value={language.id} key={language.name}>{language.name}</option>\n    });\n    const toLanguageOptions = languages?.map(language => {\n        return <option value={language.id} key={language.name}>{language.name}</option>\n    });\n\n\n    const onFromLanguageChange = (e) => {\n        setFromLanguage(e.target.value)\n        console.log('from', languages[e.target.value - 1].name)\n        get_from_languages(languages[e.target.value - 1].name)\n\n    }\n    const onToLanguageChange = (e) => {\n        setToLanguage(e.target.value)\n        console.log('to', languages[e.target.value - 1].name)\n        get_from_languages(languages[e.target.value - 1].name)\n\n    }\n\n\n    return (\n        <div className=\"App\">\n            {/*<Router>\n                <Routes>\n                    <Route path='/get_words' component={Flashcard}>\n                    </Route>\n                </Routes>\n            </Router>*/}\n            <form className=\"header\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"language\">Language that you know</label>\n                    <select onChange={onFromLanguageChange}>\n                        {fromLanguageOptions}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"language\">Language that you want to learn</label>\n                    <select onChange={onToLanguageChange}>\n                        {toLanguageOptions}\n                    </select>\n                </div>\n                {/* <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Number of words</label>\n                        <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10}/>\n                    </div>*/}\n                <div className=\"form-group\">\n                    <button className=\"btn\" /*onClick={props.fcData}*/>Generate</button>\n                </div>\n                <div className=\"form-group\">\n                    {/*<button className=\"btn\" onClick={cardShuffler(flashcards)} id=\"shuffle\">Shuffle</button>*/}\n                </div>\n            </form>\n\n            <div className=\"container\">\n                <FlashcardList/>\n            </div>\n\n\n            {/*<div>*/}\n            {/*    {(typeof fcData.flashcards == 'undefined') ? (*/}\n            {/*      <p>Loading...</p>*/}\n            {/*    ) : (*/}\n            {/*        fcData.flashcards.map((flashcard, i ) => (*/}\n            {/*            <Flashcard key={i} flashcard={flashcard}></Flashcard>*/}\n            {/*        ))*/}\n            {/*    )}*/}\n            {/*</div>*/}\n\n\n        </div>\n    );\n}\n\nexport default App;\n\n// const cardShuffler = (arr) => {\n//     return arr.sort( () => .5 - Math.random() );\n// };\n\n// useEffect(() => {\n//     fetch(\"/flashcards\").then(\n//         FlashcardData => FlashcardData.json()\n//     ).then(\n//         fcData => {\n//             setFlashcards(fcData)\n//             console.log(fcData)\n//         }\n//     )\n// },[])\n\n\n\n"]},"metadata":{},"sourceType":"module"}