{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/components/Flashcard.js\";\nimport React, { useState } from \"react\";\nimport '../app.css';\nimport axios from 'axios';\n\nconst Flashcard = props => {\n  const [flip, setFlip] = useState(false);\n  let flipClass = `card ${flip ? 'flip' : ''}`;\n  const [wordClick, setWordClicked] = useState();\n\n  function get_words(question\n  /*, correctWord*/\n  ) {\n    axios.get(`http://localhost:5000/get_words`, {\n      params: {\n        word_clicked: question\n        /*correct_word: correctWord*/\n\n      }\n    }).then(res => setWordClicked(res.data));\n  }\n\n  const doSelect = word => {\n    console.log(word);\n  };\n\n  const options = wordClick === null || wordClick === void 0 ? void 0 : wordClick.map(it => /*#__PURE__*/React.createElement(\"div\", {\n    key: it[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onClick: () => doSelect(it[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), \" \", it[0]));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: flipClass,\n    onClick: () => {\n      setFlip(!flip);\n      get_words(props.flashcard.question);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"front\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, props.flashcard.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, options)));\n};\n\nexport default Flashcard;","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/components/Flashcard.js"],"names":["React","useState","axios","Flashcard","props","flip","setFlip","flipClass","wordClick","setWordClicked","get_words","question","get","params","word_clicked","then","res","data","doSelect","word","console","log","options","map","it","flashcard"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAIM,SAAS,GAAI,QAAOF,IAAI,GAAG,MAAH,GAAY,EAAG,EAA3C;AACA,QAAM,CAACG,SAAD,EAAYC,cAAZ,IAA8BR,QAAQ,EAA5C;;AAEA,WAASS,SAAT,CAAmBC;AAAQ;AAA3B,IAA8C;AAC1CT,IAAAA,KAAK,CAACU,GAAN,CAAW,iCAAX,EAA6C;AACzCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,YAAY,EAAEH;AACd;;AAFI;AADiC,KAA7C,EAKGI,IALH,CAKQC,GAAG,IAAIP,cAAc,CAACO,GAAG,CAACC,IAAL,CAL7B;AAMH;;AAED,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAGA,QAAMG,OAAO,GAAGd,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEe,GAAX,CAAeC,EAAE,iBAC5B;AAAK,IAAA,GAAG,EAAEA,EAAE,CAAC,CAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,OAAO,EAAE,MAAMN,QAAQ,CAACM,EAAE,CAAC,CAAD,CAAH,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,OAC0DA,EAAE,CAAC,CAAD,CAD5D,CADW,CAAhB;AAOA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAEjB,SAAhB;AACK,IAAA,OAAO,EAAE,MAAM;AACXD,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAK,MAAAA,SAAS,CAACN,KAAK,CAACqB,SAAN,CAAgBd,QAAjB,CAAT;AACH,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACqB,SAAN,CAAgBd,QADrB,CALJ,eASI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKW,OADL,CATJ,CADJ,CADJ;AAiBH,CA1CD;;AA4CA,eAAenB,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport '../app.css'\nimport axios from 'axios';\n\nconst Flashcard = (props) => {\n\n    const [flip, setFlip] = useState(false)\n    let flipClass = `card ${flip ? 'flip' : ''}`\n    const [wordClick, setWordClicked] = useState()\n\n    function get_words(question/*, correctWord*/) {\n        axios.get(`http://localhost:5000/get_words`, {\n            params: {\n                word_clicked: question,\n                /*correct_word: correctWord*/\n            }\n        }).then(res => setWordClicked(res.data))\n    }\n\n    const doSelect = (word) => {\n        console.log(word)\n    }\n    const options = wordClick?.map(it =>\n        (<div key={it[0]}>\n            <input type=\"radio\" onClick={() => doSelect(it[0])}/> {it[0]}\n\n        </div>)\n    )\n\n    return (\n        <>\n            <div className={flipClass}\n                 onClick={() => {\n                     setFlip(!flip);\n                     get_words(props.flashcard.question)\n                 }}>\n                <div className=\"front\">\n                    {props.flashcard.question}\n                </div>\n\n                <div className=\"back\">\n                    {options}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Flashcard;"]},"metadata":{},"sourceType":"module"}