{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './app.css';\nimport Button from 'react-bootstrap/Button';\nimport { useParams } from 'react-route';\nexport default function Flashcard(_ref) {\n  let {\n    flashcard\n  } = _ref;\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const [color, setColor] = useState(false);\n  let cardClass = color ? \"front text-success\" : \"front text-danger\";\n  let flipClass = `card ${flip ? 'flip' : ''}`;\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  const handleClick = c => {\n    setColor(c);\n  };\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n\n  useEffect(setMaxHeight, [flashcard.question, flashcard.answer]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []);\n  useEffect(() => {\n    const {\n      id\n    } = useParams();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: flipClass,\n    style: {\n      height: height\n    },\n    onClick: () => setFlip(!flip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cardClass,\n    ref: frontEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, flashcard.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\",\n    ref: backEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, flashcard.answer, \"url=\", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleClick(true),\n    className: \"btn-success\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Correct\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleClick(false),\n    className: \"btn-danger\",\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Incorrect\"))));\n}\n;","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js"],"names":["React","useEffect","useRef","useState","Button","useParams","Flashcard","flashcard","flip","setFlip","height","setHeight","color","setColor","cardClass","flipClass","frontEl","backEl","handleClick","c","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","question","answer","window","addEventListener","removeEventListener","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,eAAe,SAASC,SAAT,OAAkC;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,SAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAIW,SAAS,GAAGF,KAAK,GAAE,oBAAF,GAAwB,mBAA7C;AACA,MAAIG,SAAS,GAAI,QAAOP,IAAI,GAAG,MAAH,GAAY,EAAG,EAA3C;AAEA,QAAMQ,OAAO,GAAGd,MAAM,EAAtB;AACA,QAAMe,MAAM,GAAGf,MAAM,EAArB;;AAEA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACvBN,IAAAA,QAAQ,CAACM,CAAD,CAAR;AACH,GAFD;;AAIA,WAASC,YAAT,GAAwB;AACpB,UAAMC,WAAW,GAAGL,OAAO,CAACM,OAAR,CAAgBC,qBAAhB,GAAwCb,MAA5D;AACA,UAAMc,UAAU,GAAGP,MAAM,CAACK,OAAP,CAAeC,qBAAf,GAAuCb,MAA1D;AACAC,IAAAA,SAAS,CAACc,IAAI,CAACC,GAAL,CAASL,WAAT,EAAsBG,UAAtB,EAAkC,GAAlC,CAAD,CAAT;AACH;;AAEDvB,EAAAA,SAAS,CAACmB,YAAD,EAAe,CAACb,SAAS,CAACoB,QAAX,EAAqBpB,SAAS,CAACqB,MAA/B,CAAf,CAAT;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCV,YAAlC;AACA,WAAO,MAAMS,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCX,YAArC,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAC+B,MAAAA;AAAD,QAAO3B,SAAS,EAAtB;AACH,GAFQ,CAAT;AAIA,sBACI,uDACA;AAAK,IAAA,SAAS,EAAEU,SAAhB;AACK,IAAA,KAAK,EAAE;AAAEL,MAAAA,MAAM,EAAGA;AAAX,KADZ;AAEI,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAEM,SAAhB;AAA2B,IAAA,GAAG,EAAEE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,SAAS,CAACoB,QADf,CAHJ,eAOI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEV,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,SAAS,CAACqB,MADf,uBAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAIV,WAAW,CAAC,IAAD,CAAhC;AAAwC,IAAA,SAAS,EAAC,aAAlD;AAAgE,IAAA,OAAO,EAAC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAIA,WAAW,CAAC,KAAD,CAAhC;AAAyC,IAAA,SAAS,EAAC,YAAnD;AAAgE,IAAA,OAAO,EAAC,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CAPJ,CADA,CADJ;AAkBH;AAAA","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport './app.css'\nimport Button from 'react-bootstrap/Button';\nimport {useParams} from 'react-route'\n\n\nexport default function Flashcard({ flashcard }) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('initial')\n    const [color, setColor] = useState(false)\n    let cardClass = color? \"front text-success\": \"front text-danger\";\n    let flipClass = `card ${flip ? 'flip' : ''}`\n\n    const frontEl = useRef()\n    const backEl = useRef()\n\n    const handleClick = (c) => {\n        setColor(c);\n    }\n\n    function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n        setHeight(Math.max(frontHeight, backHeight, 100))\n    }\n\n    useEffect(setMaxHeight, [flashcard.question, flashcard.answer])\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n    useEffect(() => {\n        const {id} = useParams()\n    })\n\n    return(\n        <>\n        <div className={flipClass}\n             style={{ height : height}}\n            onClick={() => setFlip(!flip)}>\n            <div className={cardClass} ref={frontEl}>\n                {flashcard.question}\n            </div>\n\n            <div className=\"back\" ref={backEl}>\n                {flashcard.answer}\n                url=\n                <Button onClick={()=>handleClick(true)} className=\"btn-success\" variant=\"success\" >Correct</Button>\n                <Button onClick={()=>handleClick(false)} className=\"btn-danger\" variant=\"danger\" >Incorrect</Button>\n            </div>\n        </div>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}