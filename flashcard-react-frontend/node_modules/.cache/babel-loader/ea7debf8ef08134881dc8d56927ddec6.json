{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport fcData from \"./FlashcardList\"; // import FlashcardData from \"./data/flashcards.json\";\n\nimport LanguageData from \"./data/languages.json\";\nimport Flashcard from \"./Flashcard\";\n\nfunction App() {\n  // const [flashcards] = useState(FlashcardData)\n  const [languages\n  /*, setLanguagesnpm*/\n  ] = useState(LanguageData); // const [fcData,setFlashcards] = useState([{}])\n\n  const languageOptions = languages.map(language => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: language.id,\n      key: language.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    }, language.name);\n  }); // const cardShuffler = (arr) => {\n  //     return arr.sort( () => .5 - Math.random() );\n  // };\n  // useEffect(() => {\n  //     fetch(\"/flashcards\").then(\n  //         FlashcardData => FlashcardData.json()\n  //     ).then(\n  //         fcData => {\n  //             setFlashcards(fcData)\n  //             console.log(fcData)\n  //         }\n  //     )\n  // },[])\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Language that you know\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, languageOptions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Language that you want to learn\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, languageOptions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Number of words\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    min: \"1\",\n    step: \"1\",\n    defaultValue: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Generate\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: cardShuffler(fcData),\n    id: \"shuffle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Shuffle\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlashcardList, {\n    flashcards: fcData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, typeof fcData.flashcards == 'undefined' ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Loading...\") : fcData.flashcards.map((flashcard, i) => /*#__PURE__*/React.createElement(Flashcard, {\n    key: i,\n    flashcard: flashcard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/App.js"],"names":["React","useEffect","useState","FlashcardList","fcData","LanguageData","Flashcard","App","languages","languageOptions","map","language","id","name","cardShuffler","flashcards","flashcard","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport fcData from \"./FlashcardList\";\n// import FlashcardData from \"./data/flashcards.json\";\nimport LanguageData from \"./data/languages.json\"\nimport Flashcard from \"./Flashcard\"\n\nfunction App() {\n    // const [flashcards] = useState(FlashcardData)\n    const [languages/*, setLanguagesnpm*/] = useState(LanguageData)\n   // const [fcData,setFlashcards] = useState([{}])\n\n    const languageOptions = languages.map(language => {\n        return <option value={language.id} key={language.id}>{language.name}</option>\n    });\n\n    // const cardShuffler = (arr) => {\n    //     return arr.sort( () => .5 - Math.random() );\n    // };\n\n    // useEffect(() => {\n    //     fetch(\"/flashcards\").then(\n    //         FlashcardData => FlashcardData.json()\n    //     ).then(\n    //         fcData => {\n    //             setFlashcards(fcData)\n    //             console.log(fcData)\n    //         }\n    //     )\n    // },[])\n\n  return (\n      <>\n      <form className=\"header\">\n        <div className=\"form-group\">\n          <label htmlFor=\"language\">Language that you know</label>\n          <select id=\"language\">\n            {languageOptions}\n          </select>\n        </div>\n          <div className=\"form-group\">\n              <label htmlFor=\"language\">Language that you want to learn</label>\n              <select id=\"language\">\n                  {languageOptions}\n              </select>\n          </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of words</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10}/>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n          <div className=\"form-group\">\n              <button className=\"btn\" onClick={cardShuffler(fcData)} id=\"shuffle\">Shuffle</button>\n          </div>\n      </form>\n\n      <div className=\"container\">\n        <FlashcardList flashcards={fcData} />\n      </div>\n      <div>\n          {(typeof fcData.flashcards == 'undefined') ? (\n            <p>Loading...</p>\n          ) : (\n              fcData.flashcards.map((flashcard, i ) => (\n                  <Flashcard key={i} flashcard={flashcard}></Flashcard>\n              ))\n          )}\n      </div>\n\n\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}