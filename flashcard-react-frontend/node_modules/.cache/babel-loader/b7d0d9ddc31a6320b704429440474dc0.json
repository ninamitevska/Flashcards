{"ast":null,"code":"var _jsxFileName = \"/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './app.css';\nimport axios from 'axios';\nexport default function Flashcard(_ref) {\n  let {\n    flashcard\n  } = _ref;\n  const [flip, setFlip] = useState(false); //const [height, setHeight] = useState('initial')\n  // const [color, setColor] = useState(false)\n  //let cardClass = color ? \"front text-success\" : \"front text-danger\";\n\n  let flipClass = `card ${flip ? 'flip' : ''}`;\n  const [wordClick, setWordClicked] = useState(); //const frontEl = useRef()\n  //const backEl = useRef()\n\n  /* function setMaxHeight() {\n       const frontHeight = frontEl.current.getBoundingClientRect().height\n       const backHeight = backEl.current.getBoundingClientRect().height\n       setHeight(Math.max(frontHeight, backHeight, 150))\n   }\n    useEffect(setMaxHeight, [flashcard.question])\n   useEffect(() => {\n       window.addEventListener('resize', setMaxHeight)\n       return () => window.removeEventListener('resize', setMaxHeight)\n   }, [])*/\n  // useEffect(() => {\n  //     (`/get_words`)\n  //         .then(response => response.json())\n  //         .then(wordClick=> setWordClicked(wordClick))\n  // },[word_clicked])\n\n  function get_words(question, correctWord) {\n    axios.get(`http://localhost:5000/get_words`, {\n      params: {\n        word_clicked: question,\n        correct_word: correctWord\n      }\n    }).then(res => setWordClicked(res.data));\n  }\n\n  const doSelect = word => {\n    console.log(word);\n  };\n\n  const options = wordClick === null || wordClick === void 0 ? void 0 : wordClick.map(it => /*#__PURE__*/React.createElement(\"div\", {\n    key: it[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    onClick: () => doSelect(it[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), \" \", it[0]));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: flipClass,\n    onClick: () => {\n      setFlip(!flip);\n      get_words(flashcard.question);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"front\"\n    /*ref={frontEl}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, flashcard.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\"\n    /*ref={backEl}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, options)));\n}\n;","map":{"version":3,"sources":["/Users/ninamitevska/PycharmProjects/flaskBackend/flashcard-react-frontend/src/Flashcard.js"],"names":["React","useEffect","useRef","useState","axios","Flashcard","flashcard","flip","setFlip","flipClass","wordClick","setWordClicked","get_words","question","correctWord","get","params","word_clicked","correct_word","then","res","data","doSelect","word","console","log","options","map","it"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,SAAT,OAAgC;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC,CAD2C,CAE3C;AACD;AACC;;AACA,MAAIM,SAAS,GAAI,QAAOF,IAAI,GAAG,MAAH,GAAY,EAAG,EAA3C;AACA,QAAM,CAACG,SAAD,EAAYC,cAAZ,IAA8BR,QAAQ,EAA5C,CAN2C,CAQ3C;AACA;;AAGD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI;AACA;AACA;AACA;AACA;;AAGA,WAASS,SAAT,CAAmBC,QAAnB,EAA6BC,WAA7B,EAA0C;AACtCV,IAAAA,KAAK,CAACW,GAAN,CAAW,iCAAX,EAA6C;AACzCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,YAAY,EAAEJ,QADV;AAEJK,QAAAA,YAAY,EAAEJ;AAFV;AADiC,KAA7C,EAKGK,IALH,CAKQC,GAAG,IAAIT,cAAc,CAACS,GAAG,CAACC,IAAL,CAL7B;AAMH;;AAED,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAGA,QAAMG,OAAO,GAAGhB,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEiB,GAAX,CAAeC,EAAE,iBAC5B;AAAK,IAAA,GAAG,EAAEA,EAAE,CAAC,CAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,OAAO,EAAE,MAAMN,QAAQ,CAACM,EAAE,CAAC,CAAD,CAAH,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,OAC0DA,EAAE,CAAC,CAAD,CAD5D,CADW,CAAhB;AAOA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAEnB,SAAhB;AACK,IAAA,OAAO,EAAE,MAAM;AACXD,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAK,MAAAA,SAAS,CAACN,SAAS,CAACO,QAAX,CAAT;AACH,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC;AAAQ;AAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,SAAS,CAACO,QADf,CALJ,eASI;AAAK,IAAA,SAAS,EAAC;AAAO;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKa,OADL,CATJ,CADJ,CADJ;AAiBH;AAAA","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport './app.css'\nimport axios from 'axios';\n\n\nexport default function Flashcard({flashcard}) {\n    const [flip, setFlip] = useState(false)\n    //const [height, setHeight] = useState('initial')\n   // const [color, setColor] = useState(false)\n    //let cardClass = color ? \"front text-success\" : \"front text-danger\";\n    let flipClass = `card ${flip ? 'flip' : ''}`\n    const [wordClick, setWordClicked] = useState()\n\n    //const frontEl = useRef()\n    //const backEl = useRef()\n\n\n   /* function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n        setHeight(Math.max(frontHeight, backHeight, 150))\n    }\n\n    useEffect(setMaxHeight, [flashcard.question])\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])*/\n\n    // useEffect(() => {\n    //     (`/get_words`)\n    //         .then(response => response.json())\n    //         .then(wordClick=> setWordClicked(wordClick))\n    // },[word_clicked])\n\n\n    function get_words(question, correctWord) {\n        axios.get(`http://localhost:5000/get_words`, {\n            params: {\n                word_clicked: question,\n                correct_word: correctWord\n            }\n        }).then(res => setWordClicked(res.data))\n    }\n\n    const doSelect = (word) => {\n        console.log(word)\n    }\n    const options = wordClick?.map(it =>\n        (<div key={it[0]}>\n            <input type=\"radio\" onClick={() => doSelect(it[0])}/> {it[0]}\n\n        </div>)\n    )\n\n    return (\n        <>\n            <div className={flipClass}\n                 onClick={() => {\n                     setFlip(!flip);\n                     get_words(flashcard.question)\n                 }}>\n                <div className=\"front\" /*ref={frontEl}*/>\n                    {flashcard.question}\n                </div>\n\n                <div className=\"back\" /*ref={backEl}*/>\n                    {options}\n                </div>\n            </div>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}